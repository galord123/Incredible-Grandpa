{"message":"function is never used: `noEaOne`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":271,"byte_end":278,"line_start":9,"line_end":9,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn noEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 9) & notAFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function is never used: `noEaOne`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:9:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn noEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 9) & notAFile)}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"function is never used: `soEaOne`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":355,"byte_end":362,"line_start":10,"line_end":10,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn soEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 7) & notAFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function is never used: `soEaOne`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:10:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn soEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 7) & notAFile)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `soWeOne`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":523,"byte_end":530,"line_start":12,"line_end":12,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn soWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 9) & notHFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function is never used: `soWeOne`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:12:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn soWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 9) & notHFile)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `noWeOne`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":607,"byte_end":614,"line_start":13,"line_end":13,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn noWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 7) & notHFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function is never used: `noWeOne`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:13:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn noWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 7) & notHFile)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"message":"constant `notAFile` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":56,"byte_end":64,"line_start":5,"line_end":5,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"const notAFile: u64 = 0xfefefefefefefefe; // ~0x0101010101010101","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":56,"byte_end":64,"line_start":5,"line_end":5,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"const notAFile: u64 = 0xfefefefefefefefe; // ~0x0101010101010101","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":"NOT_AFILE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: constant `notAFile` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:5:7\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mconst notAFile: u64 = 0xfefefefefefefefe; // ~0x0101010101010101\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper case: `NOT_AFILE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"message":"constant `notHFile` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":122,"byte_end":130,"line_start":6,"line_end":6,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"const notHFile: u64 = 0x7f7f7f7f7f7f7f7f; // ~0x8080808080808080","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":122,"byte_end":130,"line_start":6,"line_end":6,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"const notHFile: u64 = 0x7f7f7f7f7f7f7f7f; // ~0x8080808080808080","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":"NOT_HFILE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: constant `notHFile` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:6:7\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mconst notHFile: u64 = 0x7f7f7f7f7f7f7f7f; // ~0x8080808080808080\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper case: `NOT_HFILE`\u001b[0m\n\n"}
{"message":"function `eastOne` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":187,"byte_end":194,"line_start":8,"line_end":8,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn eastOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 1) & notAFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":187,"byte_end":194,"line_start":8,"line_end":8,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn eastOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 1) & notAFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"east_one","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `eastOne` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:8:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn eastOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 1) & notAFile)}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `east_one`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"function `noEaOne` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":271,"byte_end":278,"line_start":9,"line_end":9,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn noEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 9) & notAFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":271,"byte_end":278,"line_start":9,"line_end":9,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn noEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 9) & notAFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"no_ea_one","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `noEaOne` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:9:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn noEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 9) & notAFile)}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `no_ea_one`\u001b[0m\n\n"}
{"message":"function `soEaOne` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":355,"byte_end":362,"line_start":10,"line_end":10,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn soEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 7) & notAFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":355,"byte_end":362,"line_start":10,"line_end":10,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn soEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 7) & notAFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"so_ea_one","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `soEaOne` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:10:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn soEaOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 7) & notAFile)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `so_ea_one`\u001b[0m\n\n"}
{"message":"function `westOne` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":439,"byte_end":446,"line_start":11,"line_end":11,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn westOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 1) & notHFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":439,"byte_end":446,"line_start":11,"line_end":11,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn westOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 1) & notHFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"west_one","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `westOne` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:11:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn westOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 1) & notHFile)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `west_one`\u001b[0m\n\n"}
{"message":"function `soWeOne` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":523,"byte_end":530,"line_start":12,"line_end":12,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn soWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 9) & notHFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":523,"byte_end":530,"line_start":12,"line_end":12,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn soWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 9) & notHFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"so_we_one","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `soWeOne` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:12:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn soWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 >> 9) & notHFile)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `so_we_one`\u001b[0m\n\n"}
{"message":"function `noWeOne` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":607,"byte_end":614,"line_start":13,"line_end":13,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn noWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 7) & notHFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":607,"byte_end":614,"line_start":13,"line_end":13,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn noWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 7) & notHFile)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"no_we_one","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `noWeOne` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:13:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn noWeOne (b: BitBoard) -> BitBoard {return BitBoard::new((b.0 << 7) & notHFile)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `no_we_one`\u001b[0m\n\n"}
{"message":"function `soutOne` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":695,"byte_end":702,"line_start":16,"line_end":16,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn soutOne (b: BitBoard) -> BitBoard {return  BitBoard::new(b.0 >> 8)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":695,"byte_end":702,"line_start":16,"line_end":16,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn soutOne (b: BitBoard) -> BitBoard {return  BitBoard::new(b.0 >> 8)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"sout_one","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `soutOne` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:16:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn soutOne (b: BitBoard) -> BitBoard {return  BitBoard::new(b.0 >> 8)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `sout_one`\u001b[0m\n\n"}
{"message":"function `nortOne` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":767,"byte_end":774,"line_start":17,"line_end":17,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn nortOne (b:BitBoard) -> BitBoard {return   BitBoard::new(b.0 << 8)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":767,"byte_end":774,"line_start":17,"line_end":17,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn nortOne (b:BitBoard) -> BitBoard {return   BitBoard::new(b.0 << 8)}","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"nort_one","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `nortOne` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:17:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn nortOne (b:BitBoard) -> BitBoard {return   BitBoard::new(b.0 << 8)}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `nort_one`\u001b[0m\n\n"}
{"message":"function `nortFill` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":843,"byte_end":851,"line_start":20,"line_end":20,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"fn nortFill(gen: BitBoard) -> BitBoard{","highlight_start":4,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":843,"byte_end":851,"line_start":20,"line_end":20,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"fn nortFill(gen: BitBoard) -> BitBoard{","highlight_start":4,"highlight_end":12}],"label":null,"suggested_replacement":"nort_fill","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `nortFill` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:20:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn nortFill(gen: BitBoard) -> BitBoard{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `nort_fill`\u001b[0m\n\n"}
{"message":"function `soutFill` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":1018,"byte_end":1026,"line_start":28,"line_end":28,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"fn soutFill(gen: BitBoard) -> BitBoard {","highlight_start":4,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":1018,"byte_end":1026,"line_start":28,"line_end":28,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"fn soutFill(gen: BitBoard) -> BitBoard {","highlight_start":4,"highlight_end":12}],"label":null,"suggested_replacement":"sout_fill","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `soutFill` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:28:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn soutFill(gen: BitBoard) -> BitBoard {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `sout_fill`\u001b[0m\n\n"}
{"message":"function `kingAttacks` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":2595,"byte_end":2606,"line_start":67,"line_end":67,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"pub fn kingAttacks(king_set:BitBoard) -> BitBoard{","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\bitboard_operators.rs","byte_start":2595,"byte_end":2606,"line_start":67,"line_end":67,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"pub fn kingAttacks(king_set:BitBoard) -> BitBoard{","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"king_attacks","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `kingAttacks` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bitboard_operators.rs:67:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub fn kingAttacks(king_set:BitBoard) -> BitBoard{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `king_attacks`\u001b[0m\n\n"}
{"message":"17 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 17 warnings emitted\u001b[0m\n\n"}
